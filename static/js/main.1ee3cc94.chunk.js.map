{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendsListItem/FriendsListItem.module.css","components/Statistics/Statistics.module.css","components/StatList/StatList.module.css","components/Stat/Stat.module.css","components/FriendsList/FriendsList.module.css","components/Profile/defaultUserAvatar.svg","components/Profile/Profile.js","components/Stat/Stat.js","components/StatList/StatsList.js","components/Statistics/Statistics.js","components/FriendsListItem/defaultFriendAvatar.svg","components/FriendsListItem/FriendsListItem.js","components/FriendsList/FriendsList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","stat","label","quantity","followers","views","likes","defaultProps","defaultUserAvatar","Stat","percentage","StatsList","statList","map","min","max","id","item","style","backgroundColor","Math","random","Statistics","title","statistics","FriendsListItem","status","isOnline","online","offline","width","defaultFriendAvatar","FriendsList","friends","friendsList","TransactionHistory","items","transactionHistory","tableHeadRow","tableHeadCell","type","amount","currency","tableBodyRow","tableBodyCell","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ee3cc94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1wEZ9\",\"description\":\"Profile_description__3hnlv\",\"avatar\":\"Profile_avatar__3cfVR\",\"name\":\"Profile_name__3uUVG\",\"tag\":\"Profile_tag__1DH--\",\"location\":\"Profile_location__17Rj7\",\"stats\":\"Profile_stats__1VVfl\",\"stat\":\"Profile_stat__1Cwrz\",\"label\":\"Profile_label__2lQ7k\",\"quantity\":\"Profile_quantity__ofuyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2zF26\",\"tableHeadRow\":\"TransactionHistory_tableHeadRow__16gbT\",\"tableHeadCell\":\"TransactionHistory_tableHeadCell__GSZhi\",\"tableBodyCell\":\"TransactionHistory_tableBodyCell__2To6x\",\"tableBodyRow\":\"TransactionHistory_tableBodyRow__2uF9o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsListItem_item__yn0ZG\",\"status\":\"FriendsListItem_status__2kVOI\",\"avatar\":\"FriendsListItem_avatar__1UmyQ\",\"online\":\"FriendsListItem_online__36oE0 FriendsListItem_status__2kVOI\",\"offline\":\"FriendsListItem_offline__24a6D FriendsListItem_status__2kVOI\",\"name\":\"FriendsListItem_name__UQ7HG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__mBC7u\",\"title\":\"Statistics_title__7ef31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"StatList_statList__3aoep\",\"item\":\"StatList_item__2Kt0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Stat_label__1rJ3h\",\"percentage\":\"Stat_percentage__nbmQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"FriendsList_friendsList__3mQfh\"};","export default __webpack_public_path__ + \"static/media/defaultUserAvatar.85994bf0.svg\";","import PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\nimport defaultUserAvatar from './defaultUserAvatar.svg';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img className={styles.avatar} src={avatar} alt=\"Аватар пользователя\" />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>@{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n      <li className={styles.stat}>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li className={styles.stat}>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li className={styles.stat}>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n  avatar: defaultUserAvatar,\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Stat.module.css';\r\n\r\nconst Stat = ({ label, percentage }) => (\r\n  <>\r\n    <span className={styles.label}>{label}</span>\r\n    <span className={styles.percentage}>{percentage}%</span>\r\n  </>\r\n);\r\n\r\nStat.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Stat;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './StatList.module.css';\r\nimport Stat from '../Stat/Stat';\r\n\r\nconst generateItemColor = (min, max) => {\r\n  const itemColor = `rgb(\r\n      ${Math.random() * (max - min) + min},\r\n      ${Math.random() * (max - min) + min},\r\n      ${Math.random() * (max - min) + min}\r\n  )`;\r\n\r\n  return itemColor;\r\n};\r\n\r\nconst StatsList = ({ stats }) => (\r\n  <ul className={styles.statList}>\r\n    {stats.map(({ id, label, percentage }) => (\r\n      <li\r\n        className={styles.item}\r\n        style={{ backgroundColor: generateItemColor(0, 255) }}\r\n        key={id}\r\n      >\r\n        <Stat label={label} percentage={percentage} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nStatsList.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default StatsList;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\nimport StatsList from '../StatList/StatsList';\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n    <StatsList stats={stats} />\r\n  </section>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","export default __webpack_public_path__ + \"static/media/defaultFriendAvatar.954bb6ee.svg\";","import PropTypes from 'prop-types';\r\nimport styles from './FriendsListItem.module.css';\r\nimport defaultFriendAvatar from './defaultFriendAvatar.svg';\r\n\r\nconst FriendsListItem = ({ avatar, name, isOnline }) => {\r\n  const status = isOnline ? styles.online : styles.offline;\r\n\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={status}></span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendsListItem.defaultProps = {\r\n  avatar: defaultFriendAvatar,\r\n};\r\n\r\nFriendsListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendsListItem;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './FriendsList.module.css';\r\nimport FriendsListItem from '../FriendsListItem/FriendsListItem';\r\n\r\nconst FriendsList = ({ friends }) => (\r\n  <ul className={styles.friendsList}>\r\n    {friends.map(({ id, avatar, name, isOnline }) => (\r\n      <FriendsListItem\r\n        key={id}\r\n        avatar={avatar}\r\n        name={name}\r\n        isOnline={isOnline}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendsList;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.transactionHistory}>\r\n    <thead>\r\n      <tr className={styles.tableHeadRow}>\r\n        <th className={styles.tableHeadCell}>Type</th>\r\n        <th className={styles.tableHeadCell}>Amount</th>\r\n        <th className={styles.tableHeadCell}>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(({ id, type, amount, currency }) => (\r\n        <tr className={styles.tableBodyRow} key={id}>\r\n          <td className={styles.tableBodyCell}>{type}</td>\r\n          <td className={styles.tableBodyCell}>{amount}</td>\r\n          <td className={styles.tableBodyCell}>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import Profile from './components/Profile/Profile';\r\nimport user from './components/Profile/user.json';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport statisticalData from './components/Statistics/statistical-data.json';\r\nimport FriendsList from './components/FriendsList/FriendsList';\r\nimport friends from './components/FriendsList/friends.json';\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\r\nimport transactions from './components/TransactionHistory/transactions.json';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Profile\r\n      name={user.name}\r\n      tag={user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}\r\n    />\r\n\r\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n\r\n    <FriendsList friends={friends} />\r\n\r\n    <TransactionHistory items={transactions} />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}